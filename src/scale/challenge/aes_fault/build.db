% Copyright (C) 2017 Daniel Page <dan@phoo.org>
%
% Use of this source code is restricted per the CC BY-SA license, a copy of
% which can be found via http://creativecommons.org (and should be included 
% as LICENSE.txt within the associated archive or repository).

% -----------------------------------------------------------------------------

1.r ! Consider that instead of influencing data (e.g., the AES state), a
    ! fault might influence control-flow (e.g., a conditional statement)
    ! somehow during execution.  Stating any assumptions you make, give 
    ! an alternative attack strategy based on this ability.
2.r ! Outline the methods available for hardening this AES implementation 
    ! against fault attacks; for each method, explain any assumptions you
    ! make and compare it with the others wrt. metrics such as robustness,
    ! latency, and memory footprint.

% -----------------------------------------------------------------------------

3.o ! The question outlines one method to induce faults (i.e., via a clock 
    ! glitch).  For the same attack target, construct a set of alternative 
    ! methods and explain whether they seem applicable given the context.
4.o ! For side-channel attacks, the number of acquisitions required can be
    ! used as a measure of efficiency.  Outline the equivalent measure for 
    ! fault attacks, and explain whether (and why) you think a side-channel 
    ! attack on AES could be as efficient as a fault attack based on these 
    ! measures.
5.o ! How do the properties of different AES round functions influence the 
    ! effectiveness of your attack?  More specifically, imagine SubBytes 
    ! is removed: does this help or hinder your attack?
6.o ! One way to reduce the effectiveness of DPA attacks on AES is to use a
    ! masking countermeasure.  Explain if and why the *same* countermeasure 
    ! could also have an impact on the effectiveness of fault attacks. 

% -----------------------------------------------------------------------------
